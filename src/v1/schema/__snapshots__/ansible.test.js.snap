// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Ansible Automation Resolver Correctly resolves Ansible Job Templates 1`] = `
Object {
  "data": Object {
    "ansibleJobTemplates": Array [
      Object {
        "description": "",
        "extra_vars": "",
        "name": "Demo Job Template",
      },
    ],
  },
}
`;

exports[`Ansible Automation Resolver Correctly resolves Policy Automation in multi ns 1`] = `
Object {
  "data": Object {
    "policyAutomations": Array [
      Object {
        "apiVersion": "policy.open-cluster-management.io/v1alpha1",
        "kind": "PolicyAutomation",
        "metadata": Object {
          "name": "policy-grc-default-PolicyAutomation",
          "namespace": "default",
        },
        "spec": Object {
          "automationDef": Object {
            "extra_vars": Object {
              "selector": "target-cluster",
            },
            "name": "Demo Job Template",
            "secret": "grc-testing",
            "type": "AnsibleJob",
          },
          "eventHook": "non-compliance",
          "mode": "once",
          "policyRef": "policy-grc-111",
        },
      },
      Object {
        "apiVersion": "policy.open-cluster-management.io/v1alpha1",
        "kind": "PolicyAutomation",
        "metadata": Object {
          "name": "policy-grc-kube-system-PolicyAutomation",
          "namespace": "kube-system",
        },
        "spec": Object {
          "automationDef": Object {
            "extra_vars": Object {
              "selector": "target-cluster",
            },
            "name": "Demo Job Template",
            "secret": "grc-testing",
            "type": "AnsibleJob",
          },
          "eventHook": "non-compliance",
          "mode": "once",
          "policyRef": "policy-grc-111",
        },
      },
      Object {
        "apiVersion": "policy.open-cluster-management.io/v1alpha1",
        "kind": "PolicyAutomation",
        "metadata": Object {
          "name": "policy-grc-policy-namespace-PolicyAutomation",
          "namespace": "policy-namespace",
        },
        "spec": Object {
          "automationDef": Object {
            "extra_vars": Object {
              "selector": "target-cluster",
            },
            "name": "Demo Job Template",
            "secret": "grc-testing",
            "type": "AnsibleJob",
          },
          "eventHook": "non-compliance",
          "mode": "once",
          "policyRef": "policy-grc-111",
        },
      },
      Object {
        "apiVersion": "policy.open-cluster-management.io/v1alpha1",
        "kind": "PolicyAutomation",
        "metadata": Object {
          "name": "policy-grc-cluster1-PolicyAutomation",
          "namespace": "cluster1",
        },
        "spec": Object {
          "automationDef": Object {
            "extra_vars": Object {
              "selector": "target-cluster",
            },
            "name": "Demo Job Template",
            "secret": "grc-testing",
            "type": "AnsibleJob",
          },
          "eventHook": "non-compliance",
          "mode": "once",
          "policyRef": "policy-grc-111",
        },
      },
      Object {
        "apiVersion": "policy.open-cluster-management.io/v1alpha1",
        "kind": "PolicyAutomation",
        "metadata": Object {
          "name": "policy-grc-local-cluster-PolicyAutomation",
          "namespace": "local-cluster",
        },
        "spec": Object {
          "automationDef": Object {
            "extra_vars": Object {
              "selector": "target-cluster",
            },
            "name": "Demo Job Template",
            "secret": "grc-testing",
            "type": "AnsibleJob",
          },
          "eventHook": "non-compliance",
          "mode": "once",
          "policyRef": "policy-grc-111",
        },
      },
    ],
  },
}
`;

exports[`Ansible Automation Resolver Correctly resolves Policy Automation in single ns 1`] = `
Object {
  "data": Object {
    "policyAutomations": Array [
      Object {
        "apiVersion": "policy.open-cluster-management.io/v1alpha1",
        "kind": "PolicyAutomation",
        "metadata": Object {
          "name": "policy-grc-default-PolicyAutomation",
          "namespace": "default",
        },
        "spec": Object {
          "automationDef": Object {
            "extra_vars": Object {
              "selector": "target-cluster",
            },
            "name": "Demo Job Template",
            "secret": "grc-testing",
            "type": "AnsibleJob",
          },
          "eventHook": "non-compliance",
          "mode": "once",
          "policyRef": "policy-grc-111",
        },
      },
    ],
  },
}
`;

exports[`Ansible Automation Resolver Correctly resolves ansible credentials 1`] = `
Object {
  "data": Object {
    "ansibleCredentials": Array [
      Object {
        "host": "https://ansible-tower-web-svc-tower.apps.policy-grc-cp-dev-z4bg2.dev08.red-chesterfield.com",
        "name": "toweraccess",
        "namespace": "default",
        "token": "cjRqWnl5eWh1M2pYMzNuUFNrY25oQ2VKQ1ZNQlNN",
      },
      Object {
        "host": "https://ansible-tower-web-svc-tower.apps.policy-grc-cp-dev-z4bg2.dev08.red-chesterfield.com",
        "name": "toweraccess",
        "namespace": "kube-system",
        "token": "cjRqWnl5eWh1M2pYMzNuUFNrY25oQ2VKQ1ZNQlNN",
      },
      Object {
        "host": "https://ansible-tower-web-svc-tower.apps.policy-grc-cp-dev-z4bg2.dev08.red-chesterfield.com",
        "name": "toweraccess",
        "namespace": "policy-namespace",
        "token": "cjRqWnl5eWh1M2pYMzNuUFNrY25oQ2VKQ1ZNQlNN",
      },
      Object {
        "host": "https://ansible-tower-web-svc-tower.apps.policy-grc-cp-dev-z4bg2.dev08.red-chesterfield.com",
        "name": "toweraccess",
        "namespace": "cluster1",
        "token": "cjRqWnl5eWh1M2pYMzNuUFNrY25oQ2VKQ1ZNQlNN",
      },
      Object {
        "host": "https://ansible-tower-web-svc-tower.apps.policy-grc-cp-dev-z4bg2.dev08.red-chesterfield.com",
        "name": "toweraccess",
        "namespace": "local-cluster",
        "token": "cjRqWnl5eWh1M2pYMzNuUFNrY25oQ2VKQ1ZNQlNN",
      },
    ],
  },
}
`;

exports[`Ansible Automation Resolver Should copy and return secret name as credential needs to be copied 1`] = `
Object {
  "data": Object {
    "copyAnsibleSecret": Object {
      "name": "default.toweraccess",
    },
  },
}
`;

exports[`Ansible Automation Resolver Should correctly resolve ansible automation history 1`] = `
Object {
  "data": Object {
    "ansibleAutomationHistories": Array [
      Object {
        "finished": "2021-05-03T17:32:06.357295Z",
        "job": "default/policy-role-once-7fg9p",
        "message": "Awaiting next reconciliation",
        "name": "policy-role-once-7fg9p",
        "namespace": "default",
        "started": "2021-05-03T17:31:59.779211Z",
        "status": "successful",
      },
      Object {
        "finished": null,
        "job": null,
        "message": "Tower Secret must exists",
        "name": "policy-role-once-7fg9p",
        "namespace": "default",
        "started": "2021-05-03T17:31:32Z",
        "status": "Failed",
      },
    ],
  },
}
`;

exports[`Ansible Automation Resolver Should return existing secret name as the copied secret already exists 1`] = `
Object {
  "data": Object {
    "copyAnsibleSecret": Object {
      "name": "existing_toweraccess",
    },
  },
}
`;

exports[`Ansible Automation Resolver Should return root ansible credential name as the targeNamespace is same as credential namespace 1`] = `
Object {
  "data": Object {
    "copyAnsibleSecret": Object {
      "name": "toweraccess",
    },
  },
}
`;

exports[`Correctly Resolves Create Policy Automation Mutation 1`] = `
Object {
  "data": Object {
    "modifyPolicyAutomation": Object {
      "errors": Array [],
      "result": Array [
        Object {
          "kind": "PolicyAutomation",
          "response": Object {
            "apiVersion": "policy.open-cluster-management.io/v1alpha1",
            "kind": "PolicyAutomation",
            "metadata": Object {
              "name": "policy-grc-default-PolicyAutomation",
              "namespace": "default",
            },
            "spec": Object {
              "automationDef": Object {
                "extra_vars": Object {
                  "selector": "target-cluster",
                },
                "name": "Demo Job Template",
                "secret": "grc-testing",
                "type": "AnsibleJob",
              },
              "eventHook": "non-compliance",
              "mode": "once",
              "policyRef": "policy-grc-111",
            },
          },
        },
      ],
    },
  },
}
`;

exports[`Correctly Resolves Delete Policy Automation Mutation 1`] = `
Object {
  "data": Object {
    "modifyPolicyAutomation": Object {
      "errors": Array [],
      "result": Array [
        Object {
          "kind": "PolicyAutomation",
          "response": Array [
            Object {
              "kind": "PolicyAutomation",
              "response": Object {
                "apiVersion": "v1",
                "details": Object {
                  "group": "policy.open-cluster-management.io",
                  "kind": "policyautomations",
                  "name": "policy-etcdencryption-policy-automation",
                  "uid": "9841034a-bcb9-4c5b-96a4-827daaf8101a",
                },
                "kind": "Status",
                "metadata": Object {},
                "status": "Success",
              },
            },
          ],
        },
      ],
    },
  },
}
`;

exports[`Correctly Resolves Update Policy Automation Mutation 1`] = `
Object {
  "data": Object {
    "modifyPolicyAutomation": Object {
      "errors": Array [],
      "result": Array [
        Object {
          "kind": "PolicyAutomation",
          "response": Object {
            "apiVersion": "policy.open-cluster-management.io/v1alpha1",
            "kind": "PolicyAutomation",
            "metadata": Object {
              "name": "policy-grc-default-PolicyAutomation",
              "namespace": "default",
            },
            "spec": Object {
              "automationDef": Object {
                "extra_vars": Object {
                  "selector": "new-cluster",
                },
                "name": "New job Template",
                "secret": "grc-testing",
                "type": "AnsibleJob",
              },
              "eventHook": "non-compliance",
              "mode": "manually",
              "policyRef": "policy-grc-111",
            },
          },
        },
      ],
    },
  },
}
`;

exports[`Resolves Policy Automation Mutation Empty Case 1`] = `
Object {
  "data": Object {
    "modifyPolicyAutomation": Object {
      "errors": Array [],
      "result": Array [],
    },
  },
}
`;
